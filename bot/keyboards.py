from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, SwitchInlineQueryChosenChat
from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot.common import ThrowChoiceCallbackFactory, NFTGiftCallbackFactory
from bot.answer_texts import get_invitation
from bot.config_reader import config


def get_main_inline_keyboard(free_count: int) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    free_throws_text = f'–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –±—Ä–æ—Å–∫–∏ {free_count}' if free_count else \
        '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –±—Ä–æ—Å–∫–∏ –±—É–¥—É—Ç –∑–∞–≤—Ç—Ä–∞'
    free_throws_callback_data = ThrowChoiceCallbackFactory(throws_count=6, cost=0).pack() \
        if free_count else 'no_free_left'
    builder.row(InlineKeyboardButton(text=free_throws_text,
                callback_data=free_throws_callback_data))
    builder.row(InlineKeyboardButton(text='üèÄ 5 –º—è—á–µ–π ¬∑ 1 ‚≠ê',
                callback_data=ThrowChoiceCallbackFactory(throws_count=5, cost=1).pack()),
                 InlineKeyboardButton(text='üèÄ 3 –º—è—á–∞ ¬∑ 5 ‚≠ê',
                callback_data=ThrowChoiceCallbackFactory(throws_count=3, cost=5).pack()))
    builder.row(InlineKeyboardButton(text='üèÄ 2 –º—è—á–∞ ¬∑ 8 ‚≠ê',
                callback_data=ThrowChoiceCallbackFactory(throws_count=2, cost=8).pack()),
                 InlineKeyboardButton(text='üèÄ 1 –º—è—á ¬∑ 10 ‚≠ê',
                callback_data=ThrowChoiceCallbackFactory(throws_count=1, cost=10).pack()))
    builder.row(InlineKeyboardButton(text='üíéüèÄ 1 –º—è—á ¬∑ 15 ‚≠ê',
                callback_data=ThrowChoiceCallbackFactory(throws_count=1, cost=15, is_premium=True).pack()),
                 InlineKeyboardButton(text='+15 üèÄ –∑–∞ –¥—Ä—É–≥–∞',
                callback_data='invite'))
    builder.row(InlineKeyboardButton(text='–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ NFT üèÜ', url=config.channel_link))
    return builder.as_markup()


def get_inline_keyboard_for_free_step(channels_links: list[str]) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    for link in channels_links:
        builder.row(InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url=link))
    builder.row(InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data='check'))
    return builder.as_markup()


def get_invite_markup(user_id: int) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text='–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞', url=get_invitation(user_id)))
    return builder.as_markup()


def get_nft_gift_markup(nft_id: int, winner_id: int) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –∑–∞–ø–æ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª',
                    callback_data=NFTGiftCallbackFactory(user_id=winner_id,
                                    nft_id=nft_id).pack()))
    return builder.as_markup()
